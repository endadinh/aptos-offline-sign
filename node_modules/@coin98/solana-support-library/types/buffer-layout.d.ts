import * as BufferLayout from 'buffer-layout';
export { blob, greedy, ns32, ns64, offset, seq, struct, u8, u16, u32, nu64, Union, union } from 'buffer-layout';
/**
 * Layout for a public key
 */
export declare const publicKey: (property?: string) => Object;
/**
 * Layout for a 64bit unsigned value
 */
export declare const uint64: (property?: string) => Object;
/**
 * Layout for a Rust String type
 */
export declare const rustString: (property?: string) => BufferLayout.Layout<unknown>;
/**
 * Layout for an Authorized object
 */
export declare const authorized: (property?: string) => BufferLayout.Layout<unknown>;
/**
 * Layout for a Lockup object
 */
export declare const lockup: (property?: string) => BufferLayout.Layout<unknown>;
export declare function getAlloc(type: any, fields: any): number;
