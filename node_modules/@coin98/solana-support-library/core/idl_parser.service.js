"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdlParserService = void 0;
var borsh = __importStar(require("@project-serum/borsh"));
var camelcase_1 = __importDefault(require("camelcase"));
var snake_case_1 = require("snake-case");
var web3_js_1 = require("@solana/web3.js");
var borsh_service_1 = require("./borsh.service");
var idl_coder_1 = require("../helpers/idl_coder");
var IdlParserService = /** @class */ (function () {
    function IdlParserService(idl) {
        this.ixLayout = IdlParserService.parseIxLayout(idl);
        this.accountLayouts = IdlParserService.parseAccountLayout(idl);
        this.build(idl);
    }
    IdlParserService.parseIxLayout = function (idl) {
        var stateMethods = idl.state ? idl.state.methods : [];
        var ixLayouts = stateMethods
            .map(function (m) {
            var fieldLayouts = m.args.map(function (arg) {
                var _a, _b;
                return idl_coder_1.IdlCoder.fieldLayout(arg, Array.from(__spreadArray(__spreadArray([], __read(((_a = idl.accounts) !== null && _a !== void 0 ? _a : [])), false), __read(((_b = idl.types) !== null && _b !== void 0 ? _b : [])), false)));
            });
            var name = (0, camelcase_1.default)(m.name);
            return [name, borsh.struct(fieldLayouts, name)];
        })
            .concat(idl.instructions.map(function (ix) {
            var fieldLayouts = ix.args.map(function (arg) {
                var _a, _b;
                return idl_coder_1.IdlCoder.fieldLayout(arg, Array.from(__spreadArray(__spreadArray([], __read(((_a = idl.accounts) !== null && _a !== void 0 ? _a : [])), false), __read(((_b = idl.types) !== null && _b !== void 0 ? _b : [])), false)));
            });
            var name = (0, camelcase_1.default)(ix.name);
            return [name, borsh.struct(fieldLayouts, name)];
        }));
        return new Map(ixLayouts);
    };
    IdlParserService.parseAccountLayout = function (idl) {
        var layouts = idl.accounts.map(function (acc) {
            return [acc.name, idl_coder_1.IdlCoder.typeDefLayout(acc, idl.types)];
        });
        return new Map(layouts);
    };
    IdlParserService.prototype.build = function (idl) {
        var _this = this;
        idl.instructions.map(function (inx) {
            var inxImplement = function (args, ctx, programId) {
                var layout = _this.ixLayout.get(inx.name);
                var data = borsh_service_1.BorshService.anchorSerialize((0, snake_case_1.snakeCase)(inx.name), layout, args, 1000);
                var keys = inx.accounts.map(function (item) { return ({ pubkey: ctx[item.name], isWritable: item.isMut, isSigner: item.isSigner }); });
                if (ctx.remainingAccounts) {
                    keys.push.apply(keys, __spreadArray([], __read(ctx.remainingAccounts), false));
                }
                return new web3_js_1.TransactionInstruction({
                    data: data,
                    keys: keys,
                    programId: programId
                });
            };
            _this[inx.name] = inxImplement;
        });
        idl.accounts.map(function (account) {
            var decode = function (data) {
                return borsh_service_1.BorshService.anchorDeserialize(_this.accountLayouts.get(account.name), data);
            };
            _this["decode".concat(account.name, "Account")] = decode;
        });
    };
    return IdlParserService;
}());
exports.IdlParserService = IdlParserService;
